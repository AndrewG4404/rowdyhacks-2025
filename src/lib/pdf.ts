// GoLoanMe - PDF Generation
// Generate PDFs from HTML using puppeteer on Vercel

import puppeteer from 'puppeteer';
import chromium from '@sparticuz/chromium';

/**
 * Generate PDF from HTML content
 * Uses chromium for serverless deployment on Vercel
 */
export async function generatePDF(html: string): Promise<Buffer> {
  // Always generate PDF, even in development
  console.log('ðŸ“„ Generating PDF from HTML...');

  let browser = null;

  try {
    // Launch browser (different config for local vs Vercel)
    const isVercel = process.env.VERCEL === '1';
    
    if (isVercel) {
      // Vercel serverless environment - use chromium
      console.log('Using chromium for Vercel environment');
      browser = await puppeteer.launch({
        args: chromium.args,
        defaultViewport: chromium.defaultViewport,
        executablePath: await chromium.executablePath(),
        headless: chromium.headless,
        ignoreHTTPSErrors: true,
      });
    } else {
      // Local development - use regular puppeteer
      console.log('Using puppeteer for local environment');
      browser = await puppeteer.launch({
        headless: true,
        args: ['--no-sandbox', '--disable-setuid-sandbox'],
      });
    }

    const page = await browser.newPage();

    // Set HTML content with styling
    const styledHtml = wrapHtmlWithStyles(html);
    await page.setContent(styledHtml, { waitUntil: 'networkidle0' });

    // Generate PDF
    const pdf = await page.pdf({
      format: 'A4',
      printBackground: true,
      margin: {
        top: '20mm',
        right: '15mm',
        bottom: '20mm',
        left: '15mm',
      },
    });

    return Buffer.from(pdf);
  } catch (error) {
    console.error('PDF generation failed:', error);
    throw new Error('Failed to generate PDF');
  } finally {
    if (browser) {
      await browser.close();
    }
  }
}

/**
 * Wrap HTML with CSS styles for PDF
 */
function wrapHtmlWithStyles(html: string): string {
  return `
<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    
    body {
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
      font-size: 11pt;
      line-height: 1.6;
      color: #1a1a1a;
      padding: 20px;
      max-width: 800px;
      margin: 0 auto;
    }
    
    .contract {
      background: white;
    }
    
    h1 {
      font-size: 20pt;
      font-weight: 700;
      margin-bottom: 24px;
      color: #16a34a;
      border-bottom: 2px solid #16a34a;
      padding-bottom: 12px;
    }
    
    h2 {
      font-size: 14pt;
      font-weight: 600;
      margin-top: 24px;
      margin-bottom: 12px;
      color: #166534;
    }
    
    h3 {
      font-size: 12pt;
      font-weight: 600;
      margin-top: 16px;
      margin-bottom: 8px;
      color: #15803d;
    }
    
    p {
      margin-bottom: 12px;
      text-align: justify;
    }
    
    ul, ol {
      margin-left: 24px;
      margin-bottom: 12px;
    }
    
    li {
      margin-bottom: 6px;
    }
    
    section {
      margin-bottom: 20px;
      page-break-inside: avoid;
    }
    
    .disclaimer {
      margin-top: 32px;
      padding: 16px;
      background-color: #fef3c7;
      border-left: 4px solid #f59e0b;
      font-size: 9pt;
      page-break-inside: avoid;
    }
    
    .footer {
      margin-top: 40px;
      padding-top: 20px;
      border-top: 1px solid #e5e7eb;
      font-size: 9pt;
      color: #6b7280;
      text-align: center;
    }
    
    table {
      width: 100%;
      border-collapse: collapse;
      margin: 16px 0;
    }
    
    th, td {
      padding: 8px;
      text-align: left;
      border-bottom: 1px solid #e5e7eb;
    }
    
    th {
      background-color: #f3f4f6;
      font-weight: 600;
    }
    
    @media print {
      body {
        padding: 0;
      }
    }
  </style>
</head>
<body>
  ${html}
  
  <div class="footer">
    <p>Generated by GoLoanMe â€¢ Simulated Currency Platform â€¢ Educational Use Only</p>
    <p>Not a legally binding document â€¢ Not financial or legal advice</p>
  </div>
</body>
</html>
  `.trim();
}

/**
 * For local development - alternative PDF generation
 */
export async function generatePDFLocal(html: string): Promise<Buffer> {
  // Fallback for local dev if chromium isn't available
  // In production, always use generatePDF
  return generatePDF(html);
}

